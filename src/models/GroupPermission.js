/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GroupAdministrate from './GroupAdministrate';
import GroupCreate from './GroupCreate';
import GroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermission from './GroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermission';
import GroupDelete from './GroupDelete';
import GroupExecute from './GroupExecute';
import GroupGet from './GroupGet';
import GroupUpdate from './GroupUpdate';

/**
 * The GroupPermission model module.
 * @module models/GroupPermission
 * @version v1
 */
class GroupPermission {
    /**
     * Constructs a new <code>GroupPermission</code>.
     * @alias module:models/GroupPermission
     * @implements module:models/GroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermission
     */
    constructor() { 
        GroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermission.initialize(this);
        GroupPermission.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GroupPermission</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/GroupPermission} obj Optional instance to populate.
     * @return {module:models/GroupPermission} The populated <code>GroupPermission</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupPermission();
            GroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermission.constructFromObject(data, obj);

            if (data.hasOwnProperty('create')) {
                obj['create'] = GroupCreate.constructFromObject(data['create']);
            }
            if (data.hasOwnProperty('delete')) {
                obj['delete'] = GroupDelete.constructFromObject(data['delete']);
            }
            if (data.hasOwnProperty('execute')) {
                obj['execute'] = GroupExecute.constructFromObject(data['execute']);
            }
            if (data.hasOwnProperty('get')) {
                obj['get'] = GroupGet.constructFromObject(data['get']);
            }
            if (data.hasOwnProperty('update')) {
                obj['update'] = GroupUpdate.constructFromObject(data['update']);
            }
            if (data.hasOwnProperty('administrate')) {
                obj['administrate'] = GroupAdministrate.constructFromObject(data['administrate']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:models/GroupCreate} create
 */
GroupPermission.prototype['create'] = undefined;

/**
 * @member {module:models/GroupDelete} delete
 */
GroupPermission.prototype['delete'] = undefined;

/**
 * @member {module:models/GroupExecute} execute
 */
GroupPermission.prototype['execute'] = undefined;

/**
 * @member {module:models/GroupGet} get
 */
GroupPermission.prototype['get'] = undefined;

/**
 * @member {module:models/GroupUpdate} update
 */
GroupPermission.prototype['update'] = undefined;

/**
 * @member {module:models/GroupAdministrate} administrate
 */
GroupPermission.prototype['administrate'] = undefined;


// Implement GroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermission interface:
/**
 * @member {module:models/GroupCreate} create
 */
GroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermission.prototype['create'] = undefined;
/**
 * @member {module:models/GroupDelete} delete
 */
GroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermission.prototype['delete'] = undefined;
/**
 * @member {module:models/GroupExecute} execute
 */
GroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermission.prototype['execute'] = undefined;
/**
 * @member {module:models/GroupGet} get
 */
GroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermission.prototype['get'] = undefined;
/**
 * @member {module:models/GroupUpdate} update
 */
GroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermission.prototype['update'] = undefined;
/**
 * @member {module:models/GroupAdministrate} administrate
 */
GroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermission.prototype['administrate'] = undefined;




export default GroupPermission;

