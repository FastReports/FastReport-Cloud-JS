/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateSubscriptionPlanVM model module.
 * @module models/UpdateSubscriptionPlanVM
 * @version v1
 */
class UpdateSubscriptionPlanVM {
    /**
     * Constructs a new <code>UpdateSubscriptionPlanVM</code>.
     * @alias module:models/UpdateSubscriptionPlanVM
     */
    constructor() { 
        
        UpdateSubscriptionPlanVM.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateSubscriptionPlanVM</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/UpdateSubscriptionPlanVM} obj Optional instance to populate.
     * @return {module:models/UpdateSubscriptionPlanVM} The populated <code>UpdateSubscriptionPlanVM</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSubscriptionPlanVM();

            if (data.hasOwnProperty('isActive')) {
                obj['isActive'] = ApiClient.convertToType(data['isActive'], 'Boolean');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('timePeriodType')) {
                obj['timePeriodType'] = ApiClient.convertToType(data['timePeriodType'], 'String');
            }
            if (data.hasOwnProperty('timePeriod')) {
                obj['timePeriod'] = ApiClient.convertToType(data['timePeriod'], 'Number');
            }
            if (data.hasOwnProperty('templatesSpaceLimit')) {
                obj['templatesSpaceLimit'] = ApiClient.convertToType(data['templatesSpaceLimit'], 'Number');
            }
            if (data.hasOwnProperty('reportsSpaceLimit')) {
                obj['reportsSpaceLimit'] = ApiClient.convertToType(data['reportsSpaceLimit'], 'Number');
            }
            if (data.hasOwnProperty('exportsSpaceLimit')) {
                obj['exportsSpaceLimit'] = ApiClient.convertToType(data['exportsSpaceLimit'], 'Number');
            }
            if (data.hasOwnProperty('fileUploadSizeLimit')) {
                obj['fileUploadSizeLimit'] = ApiClient.convertToType(data['fileUploadSizeLimit'], 'Number');
            }
            if (data.hasOwnProperty('dataSourceLimit')) {
                obj['dataSourceLimit'] = ApiClient.convertToType(data['dataSourceLimit'], 'Number');
            }
            if (data.hasOwnProperty('maxUsersCount')) {
                obj['maxUsersCount'] = ApiClient.convertToType(data['maxUsersCount'], 'Number');
            }
            if (data.hasOwnProperty('hasSpaceOverdraft')) {
                obj['hasSpaceOverdraft'] = ApiClient.convertToType(data['hasSpaceOverdraft'], 'Boolean');
            }
            if (data.hasOwnProperty('groupLimit')) {
                obj['groupLimit'] = ApiClient.convertToType(data['groupLimit'], 'Number');
            }
            if (data.hasOwnProperty('onlineDesigner')) {
                obj['onlineDesigner'] = ApiClient.convertToType(data['onlineDesigner'], 'Boolean');
            }
            if (data.hasOwnProperty('isDemo')) {
                obj['isDemo'] = ApiClient.convertToType(data['isDemo'], 'Boolean');
            }
            if (data.hasOwnProperty('urlToBuy')) {
                obj['urlToBuy'] = ApiClient.convertToType(data['urlToBuy'], 'String');
            }
            if (data.hasOwnProperty('unlimitedPage')) {
                obj['unlimitedPage'] = ApiClient.convertToType(data['unlimitedPage'], 'Boolean');
            }
            if (data.hasOwnProperty('pageLimit')) {
                obj['pageLimit'] = ApiClient.convertToType(data['pageLimit'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Boolean} isActive
 */
UpdateSubscriptionPlanVM.prototype['isActive'] = undefined;

/**
 * @member {String} displayName
 */
UpdateSubscriptionPlanVM.prototype['displayName'] = undefined;

/**
 * @member {module:models/UpdateSubscriptionPlanVM.TimePeriodTypeEnum} timePeriodType
 */
UpdateSubscriptionPlanVM.prototype['timePeriodType'] = undefined;

/**
 * @member {Number} timePeriod
 */
UpdateSubscriptionPlanVM.prototype['timePeriod'] = undefined;

/**
 * @member {Number} templatesSpaceLimit
 */
UpdateSubscriptionPlanVM.prototype['templatesSpaceLimit'] = undefined;

/**
 * @member {Number} reportsSpaceLimit
 */
UpdateSubscriptionPlanVM.prototype['reportsSpaceLimit'] = undefined;

/**
 * @member {Number} exportsSpaceLimit
 */
UpdateSubscriptionPlanVM.prototype['exportsSpaceLimit'] = undefined;

/**
 * @member {Number} fileUploadSizeLimit
 */
UpdateSubscriptionPlanVM.prototype['fileUploadSizeLimit'] = undefined;

/**
 * @member {Number} dataSourceLimit
 */
UpdateSubscriptionPlanVM.prototype['dataSourceLimit'] = undefined;

/**
 * @member {Number} maxUsersCount
 */
UpdateSubscriptionPlanVM.prototype['maxUsersCount'] = undefined;

/**
 * @member {Boolean} hasSpaceOverdraft
 */
UpdateSubscriptionPlanVM.prototype['hasSpaceOverdraft'] = undefined;

/**
 * @member {Number} groupLimit
 */
UpdateSubscriptionPlanVM.prototype['groupLimit'] = undefined;

/**
 * @member {Boolean} onlineDesigner
 */
UpdateSubscriptionPlanVM.prototype['onlineDesigner'] = undefined;

/**
 * @member {Boolean} isDemo
 */
UpdateSubscriptionPlanVM.prototype['isDemo'] = undefined;

/**
 * @member {String} urlToBuy
 */
UpdateSubscriptionPlanVM.prototype['urlToBuy'] = undefined;

/**
 * @member {Boolean} unlimitedPage
 */
UpdateSubscriptionPlanVM.prototype['unlimitedPage'] = undefined;

/**
 * @member {Number} pageLimit
 */
UpdateSubscriptionPlanVM.prototype['pageLimit'] = undefined;





/**
 * Allowed values for the <code>timePeriodType</code> property.
 * @enum {String}
 * @readonly
 */
UpdateSubscriptionPlanVM['TimePeriodTypeEnum'] = {

    /**
     * value: "Second"
     * @const
     */
    "Second": "Second",

    /**
     * value: "Minute"
     * @const
     */
    "Minute": "Minute",

    /**
     * value: "Hour"
     * @const
     */
    "Hour": "Hour",

    /**
     * value: "Day"
     * @const
     */
    "Day": "Day",

    /**
     * value: "Week"
     * @const
     */
    "Week": "Week",

    /**
     * value: "Month"
     * @const
     */
    "Month": "Month",

    /**
     * value: "Year"
     * @const
     */
    "Year": "Year"
};



export default UpdateSubscriptionPlanVM;

