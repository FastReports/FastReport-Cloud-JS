/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CloudBaseVM from './CloudBaseVM';
import TaskSettingsVM from './TaskSettingsVM';
import TimePeriodType from './TimePeriodType';

/**
 * The CreateSubscriptionPlanVM model module.
 * @module models/CreateSubscriptionPlanVM
 * @version v1
 */
class CreateSubscriptionPlanVM {
    /**
     * Constructs a new <code>CreateSubscriptionPlanVM</code>.
     * @alias module:models/CreateSubscriptionPlanVM
     * @extends module:models/CloudBaseVM
     * @implements module:models/CloudBaseVM
     * @param t {String} 
     */
    constructor(t) { 
        CloudBaseVM.initialize(this, t);
        CreateSubscriptionPlanVM.initialize(this, t);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, t) { 
        obj['$t'] = t;
    }

    /**
     * Constructs a <code>CreateSubscriptionPlanVM</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/CreateSubscriptionPlanVM} obj Optional instance to populate.
     * @return {module:models/CreateSubscriptionPlanVM} The populated <code>CreateSubscriptionPlanVM</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateSubscriptionPlanVM();
            CloudBaseVM.constructFromObject(data, obj);
            CloudBaseVM.constructFromObject(data, obj);

            if (data.hasOwnProperty('isActive')) {
                obj['isActive'] = ApiClient.convertToType(data['isActive'], 'Boolean');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('timePeriodType')) {
                obj['timePeriodType'] = ApiClient.convertToType(data['timePeriodType'], TimePeriodType);
            }
            if (data.hasOwnProperty('timePeriod')) {
                obj['timePeriod'] = ApiClient.convertToType(data['timePeriod'], 'Number');
            }
            if (data.hasOwnProperty('templatesSpaceLimit')) {
                obj['templatesSpaceLimit'] = ApiClient.convertToType(data['templatesSpaceLimit'], 'Number');
            }
            if (data.hasOwnProperty('reportsSpaceLimit')) {
                obj['reportsSpaceLimit'] = ApiClient.convertToType(data['reportsSpaceLimit'], 'Number');
            }
            if (data.hasOwnProperty('exportsSpaceLimit')) {
                obj['exportsSpaceLimit'] = ApiClient.convertToType(data['exportsSpaceLimit'], 'Number');
            }
            if (data.hasOwnProperty('fileUploadSizeLimit')) {
                obj['fileUploadSizeLimit'] = ApiClient.convertToType(data['fileUploadSizeLimit'], 'Number');
            }
            if (data.hasOwnProperty('dataSourceLimit')) {
                obj['dataSourceLimit'] = ApiClient.convertToType(data['dataSourceLimit'], 'Number');
            }
            if (data.hasOwnProperty('maxUsersCount')) {
                obj['maxUsersCount'] = ApiClient.convertToType(data['maxUsersCount'], 'Number');
            }
            if (data.hasOwnProperty('groupLimit')) {
                obj['groupLimit'] = ApiClient.convertToType(data['groupLimit'], 'Number');
            }
            if (data.hasOwnProperty('onlineDesigner')) {
                obj['onlineDesigner'] = ApiClient.convertToType(data['onlineDesigner'], 'Boolean');
            }
            if (data.hasOwnProperty('isDemo')) {
                obj['isDemo'] = ApiClient.convertToType(data['isDemo'], 'Boolean');
            }
            if (data.hasOwnProperty('urlToBuy')) {
                obj['urlToBuy'] = ApiClient.convertToType(data['urlToBuy'], 'String');
            }
            if (data.hasOwnProperty('unlimitedPage')) {
                obj['unlimitedPage'] = ApiClient.convertToType(data['unlimitedPage'], 'Boolean');
            }
            if (data.hasOwnProperty('pageLimit')) {
                obj['pageLimit'] = ApiClient.convertToType(data['pageLimit'], 'Number');
            }
            if (data.hasOwnProperty('readonlyTimeLimitType')) {
                obj['readonlyTimeLimitType'] = ApiClient.convertToType(data['readonlyTimeLimitType'], TimePeriodType);
            }
            if (data.hasOwnProperty('readonlyTimeLimit')) {
                obj['readonlyTimeLimit'] = ApiClient.convertToType(data['readonlyTimeLimit'], 'Number');
            }
            if (data.hasOwnProperty('tasks')) {
                obj['tasks'] = TaskSettingsVM.constructFromObject(data['tasks']);
            }
            if (data.hasOwnProperty('$t')) {
                obj['$t'] = ApiClient.convertToType(data['$t'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateSubscriptionPlanVM</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateSubscriptionPlanVM</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateSubscriptionPlanVM.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['urlToBuy'] && !(typeof data['urlToBuy'] === 'string' || data['urlToBuy'] instanceof String)) {
            throw new Error("Expected the field `urlToBuy` to be a primitive type in the JSON string but got " + data['urlToBuy']);
        }
        // validate the optional field `tasks`
        if (data['tasks']) { // data not null
          TaskSettingsVM.validateJSON(data['tasks']);
        }
        // ensure the json data is a string
        if (data['$t'] && !(typeof data['$t'] === 'string' || data['$t'] instanceof String)) {
            throw new Error("Expected the field `$t` to be a primitive type in the JSON string but got " + data['$t']);
        }

        return true;
    }


}

CreateSubscriptionPlanVM.RequiredProperties = ["$t"];

/**
 * @member {Boolean} isActive
 */
CreateSubscriptionPlanVM.prototype['isActive'] = undefined;

/**
 * @member {String} displayName
 */
CreateSubscriptionPlanVM.prototype['displayName'] = undefined;

/**
 * @member {module:models/TimePeriodType} timePeriodType
 */
CreateSubscriptionPlanVM.prototype['timePeriodType'] = undefined;

/**
 * @member {Number} timePeriod
 */
CreateSubscriptionPlanVM.prototype['timePeriod'] = undefined;

/**
 * @member {Number} templatesSpaceLimit
 */
CreateSubscriptionPlanVM.prototype['templatesSpaceLimit'] = undefined;

/**
 * @member {Number} reportsSpaceLimit
 */
CreateSubscriptionPlanVM.prototype['reportsSpaceLimit'] = undefined;

/**
 * @member {Number} exportsSpaceLimit
 */
CreateSubscriptionPlanVM.prototype['exportsSpaceLimit'] = undefined;

/**
 * @member {Number} fileUploadSizeLimit
 */
CreateSubscriptionPlanVM.prototype['fileUploadSizeLimit'] = undefined;

/**
 * @member {Number} dataSourceLimit
 */
CreateSubscriptionPlanVM.prototype['dataSourceLimit'] = undefined;

/**
 * @member {Number} maxUsersCount
 */
CreateSubscriptionPlanVM.prototype['maxUsersCount'] = undefined;

/**
 * @member {Number} groupLimit
 */
CreateSubscriptionPlanVM.prototype['groupLimit'] = undefined;

/**
 * @member {Boolean} onlineDesigner
 */
CreateSubscriptionPlanVM.prototype['onlineDesigner'] = undefined;

/**
 * @member {Boolean} isDemo
 */
CreateSubscriptionPlanVM.prototype['isDemo'] = undefined;

/**
 * @member {String} urlToBuy
 */
CreateSubscriptionPlanVM.prototype['urlToBuy'] = undefined;

/**
 * @member {Boolean} unlimitedPage
 */
CreateSubscriptionPlanVM.prototype['unlimitedPage'] = undefined;

/**
 * @member {Number} pageLimit
 */
CreateSubscriptionPlanVM.prototype['pageLimit'] = undefined;

/**
 * @member {module:models/TimePeriodType} readonlyTimeLimitType
 */
CreateSubscriptionPlanVM.prototype['readonlyTimeLimitType'] = undefined;

/**
 * @member {Number} readonlyTimeLimit
 */
CreateSubscriptionPlanVM.prototype['readonlyTimeLimit'] = undefined;

/**
 * @member {module:models/TaskSettingsVM} tasks
 */
CreateSubscriptionPlanVM.prototype['tasks'] = undefined;

/**
 * @member {String} $t
 */
CreateSubscriptionPlanVM.prototype['$t'] = undefined;


// Implement CloudBaseVM interface:
/**
 * @member {String} $t
 */
CloudBaseVM.prototype['$t'] = undefined;




export default CreateSubscriptionPlanVM;

