/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CloudBaseVM from './CloudBaseVM';
import InvitedUser from './InvitedUser';

/**
 * The SubscriptionInviteVM model module.
 * @module models/SubscriptionInviteVM
 * @version v1
 */
class SubscriptionInviteVM {
    /**
     * Constructs a new <code>SubscriptionInviteVM</code>.
     * @alias module:models/SubscriptionInviteVM
     * @extends module:models/CloudBaseVM
     * @implements module:models/CloudBaseVM
     * @param t {String} 
     */
    constructor(t) { 
        CloudBaseVM.initialize(this, t);
        SubscriptionInviteVM.initialize(this, t);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, t) { 
        obj['$t'] = t;
    }

    /**
     * Constructs a <code>SubscriptionInviteVM</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/SubscriptionInviteVM} obj Optional instance to populate.
     * @return {module:models/SubscriptionInviteVM} The populated <code>SubscriptionInviteVM</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionInviteVM();
            CloudBaseVM.constructFromObject(data, obj);
            CloudBaseVM.constructFromObject(data, obj);

            if (data.hasOwnProperty('usages')) {
                obj['usages'] = ApiClient.convertToType(data['usages'], 'Number');
            }
            if (data.hasOwnProperty('durable')) {
                obj['durable'] = ApiClient.convertToType(data['durable'], 'Boolean');
            }
            if (data.hasOwnProperty('accessToken')) {
                obj['accessToken'] = ApiClient.convertToType(data['accessToken'], 'String');
            }
            if (data.hasOwnProperty('expiredDate')) {
                obj['expiredDate'] = ApiClient.convertToType(data['expiredDate'], 'Date');
            }
            if (data.hasOwnProperty('addedUsers')) {
                obj['addedUsers'] = ApiClient.convertToType(data['addedUsers'], [InvitedUser]);
            }
            if (data.hasOwnProperty('creatorUserId')) {
                obj['creatorUserId'] = ApiClient.convertToType(data['creatorUserId'], 'String');
            }
            if (data.hasOwnProperty('$t')) {
                obj['$t'] = ApiClient.convertToType(data['$t'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionInviteVM</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionInviteVM</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SubscriptionInviteVM.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accessToken'] && !(typeof data['accessToken'] === 'string' || data['accessToken'] instanceof String)) {
            throw new Error("Expected the field `accessToken` to be a primitive type in the JSON string but got " + data['accessToken']);
        }
        if (data['addedUsers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['addedUsers'])) {
                throw new Error("Expected the field `addedUsers` to be an array in the JSON data but got " + data['addedUsers']);
            }
            // validate the optional field `addedUsers` (array)
            for (const item of data['addedUsers']) {
                InvitedUser.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['creatorUserId'] && !(typeof data['creatorUserId'] === 'string' || data['creatorUserId'] instanceof String)) {
            throw new Error("Expected the field `creatorUserId` to be a primitive type in the JSON string but got " + data['creatorUserId']);
        }
        // ensure the json data is a string
        if (data['$t'] && !(typeof data['$t'] === 'string' || data['$t'] instanceof String)) {
            throw new Error("Expected the field `$t` to be a primitive type in the JSON string but got " + data['$t']);
        }

        return true;
    }


}

SubscriptionInviteVM.RequiredProperties = ["$t"];

/**
 * @member {Number} usages
 */
SubscriptionInviteVM.prototype['usages'] = undefined;

/**
 * @member {Boolean} durable
 */
SubscriptionInviteVM.prototype['durable'] = undefined;

/**
 * @member {String} accessToken
 */
SubscriptionInviteVM.prototype['accessToken'] = undefined;

/**
 * @member {Date} expiredDate
 */
SubscriptionInviteVM.prototype['expiredDate'] = undefined;

/**
 * @member {Array.<module:models/InvitedUser>} addedUsers
 */
SubscriptionInviteVM.prototype['addedUsers'] = undefined;

/**
 * @member {String} creatorUserId
 */
SubscriptionInviteVM.prototype['creatorUserId'] = undefined;

/**
 * @member {String} $t
 */
SubscriptionInviteVM.prototype['$t'] = undefined;


// Implement CloudBaseVM interface:
/**
 * @member {String} $t
 */
CloudBaseVM.prototype['$t'] = undefined;




export default SubscriptionInviteVM;

