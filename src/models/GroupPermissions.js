/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GroupPermission from './GroupPermission';
import GroupPermissionGroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermissions from './GroupPermissionGroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermissions';

/**
 * The GroupPermissions model module.
 * @module models/GroupPermissions
 * @version v1
 */
class GroupPermissions {
    /**
     * Constructs a new <code>GroupPermissions</code>.
     * @alias module:models/GroupPermissions
     * @implements module:models/GroupPermissionGroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermissions
     */
    constructor() { 
        GroupPermissionGroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermissions.initialize(this);
        GroupPermissions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GroupPermissions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/GroupPermissions} obj Optional instance to populate.
     * @return {module:models/GroupPermissions} The populated <code>GroupPermissions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupPermissions();
            GroupPermissionGroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermissions.constructFromObject(data, obj);

            if (data.hasOwnProperty('ownerId')) {
                obj['ownerId'] = ApiClient.convertToType(data['ownerId'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = GroupPermission.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], {'String': GroupPermission});
            }
            if (data.hasOwnProperty('other')) {
                obj['other'] = GroupPermission.constructFromObject(data['other']);
            }
            if (data.hasOwnProperty('anon')) {
                obj['anon'] = GroupPermission.constructFromObject(data['anon']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} ownerId
 */
GroupPermissions.prototype['ownerId'] = undefined;

/**
 * @member {module:models/GroupPermission} owner
 */
GroupPermissions.prototype['owner'] = undefined;

/**
 * @member {Object.<String, module:models/GroupPermission>} groups
 */
GroupPermissions.prototype['groups'] = undefined;

/**
 * @member {module:models/GroupPermission} other
 */
GroupPermissions.prototype['other'] = undefined;

/**
 * @member {module:models/GroupPermission} anon
 */
GroupPermissions.prototype['anon'] = undefined;


// Implement GroupPermissionGroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermissions interface:
/**
 * @member {String} ownerId
 */
GroupPermissionGroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermissions.prototype['ownerId'] = undefined;
/**
 * @member {module:models/GroupPermission} owner
 */
GroupPermissionGroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermissions.prototype['owner'] = undefined;
/**
 * @member {Object.<String, module:models/GroupPermission>} groups
 */
GroupPermissionGroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermissions.prototype['groups'] = undefined;
/**
 * @member {module:models/GroupPermission} other
 */
GroupPermissionGroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermissions.prototype['other'] = undefined;
/**
 * @member {module:models/GroupPermission} anon
 */
GroupPermissionGroupCreateGroupGetGroupUpdateGroupDeleteGroupExecuteGroupAdministratePermissions.prototype['anon'] = undefined;




export default GroupPermissions;

