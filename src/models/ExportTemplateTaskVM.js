/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExportTemplateTaskVM model module.
 * @module models/ExportTemplateTaskVM
 * @version v1
 */
class ExportTemplateTaskVM {
    /**
     * Constructs a new <code>ExportTemplateTaskVM</code>.
     * @alias module:models/ExportTemplateTaskVM
     */
    constructor() { 
        
        ExportTemplateTaskVM.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExportTemplateTaskVM</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/ExportTemplateTaskVM} obj Optional instance to populate.
     * @return {module:models/ExportTemplateTaskVM} The populated <code>ExportTemplateTaskVM</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportTemplateTaskVM();

            if (data.hasOwnProperty('fileName')) {
                obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
            }
            if (data.hasOwnProperty('folderId')) {
                obj['folderId'] = ApiClient.convertToType(data['folderId'], 'String');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('pagesCount')) {
                obj['pagesCount'] = ApiClient.convertToType(data['pagesCount'], 'Number');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('exportParameters')) {
                obj['exportParameters'] = ApiClient.convertToType(data['exportParameters'], {'String': Object});
            }
            if (data.hasOwnProperty('reportParameters')) {
                obj['reportParameters'] = ApiClient.convertToType(data['reportParameters'], {'String': Object});
            }
        }
        return obj;
    }


}

/**
 * @member {String} fileName
 */
ExportTemplateTaskVM.prototype['fileName'] = undefined;

/**
 * @member {String} folderId
 */
ExportTemplateTaskVM.prototype['folderId'] = undefined;

/**
 * @member {String} locale
 */
ExportTemplateTaskVM.prototype['locale'] = undefined;

/**
 * @member {Number} pagesCount
 */
ExportTemplateTaskVM.prototype['pagesCount'] = undefined;

/**
 * @member {module:models/ExportTemplateTaskVM.FormatEnum} format
 */
ExportTemplateTaskVM.prototype['format'] = undefined;

/**
 * @member {Object.<String, Object>} exportParameters
 */
ExportTemplateTaskVM.prototype['exportParameters'] = undefined;

/**
 * @member {Object.<String, Object>} reportParameters
 */
ExportTemplateTaskVM.prototype['reportParameters'] = undefined;





/**
 * Allowed values for the <code>format</code> property.
 * @enum {String}
 * @readonly
 */
ExportTemplateTaskVM['FormatEnum'] = {

    /**
     * value: "Pdf"
     * @const
     */
    "Pdf": "Pdf",

    /**
     * value: "Html"
     * @const
     */
    "Html": "Html",

    /**
     * value: "Mht"
     * @const
     */
    "Mht": "Mht",

    /**
     * value: "Image"
     * @const
     */
    "Image": "Image",

    /**
     * value: "Biff8"
     * @const
     */
    "Biff8": "Biff8",

    /**
     * value: "Csv"
     * @const
     */
    "Csv": "Csv",

    /**
     * value: "Dbf"
     * @const
     */
    "Dbf": "Dbf",

    /**
     * value: "Json"
     * @const
     */
    "Json": "Json",

    /**
     * value: "LaTeX"
     * @const
     */
    "LaTeX": "LaTeX",

    /**
     * value: "Odt"
     * @const
     */
    "Odt": "Odt",

    /**
     * value: "Ods"
     * @const
     */
    "Ods": "Ods",

    /**
     * value: "Docx"
     * @const
     */
    "Docx": "Docx",

    /**
     * value: "Pptx"
     * @const
     */
    "Pptx": "Pptx",

    /**
     * value: "Xlsx"
     * @const
     */
    "Xlsx": "Xlsx",

    /**
     * value: "Xps"
     * @const
     */
    "Xps": "Xps",

    /**
     * value: "Ppml"
     * @const
     */
    "Ppml": "Ppml",

    /**
     * value: "PS"
     * @const
     */
    "PS": "PS",

    /**
     * value: "Richtext"
     * @const
     */
    "Richtext": "Richtext",

    /**
     * value: "Svg"
     * @const
     */
    "Svg": "Svg",

    /**
     * value: "Text"
     * @const
     */
    "Text": "Text",

    /**
     * value: "Xaml"
     * @const
     */
    "Xaml": "Xaml",

    /**
     * value: "Xml"
     * @const
     */
    "Xml": "Xml",

    /**
     * value: "Zpl"
     * @const
     */
    "Zpl": "Zpl"
};



export default ExportTemplateTaskVM;

