/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AnalysisResultsVM from '../models/AnalysisResultsVM';
import ProblemDetails from '../models/ProblemDetails';

/**
* AdminSubscriptionProblemSolving service.
* @module client/AdminSubscriptionProblemSolvingApi
* @version v1
*/
export default class AdminSubscriptionProblemSolvingApi {

    /**
    * Constructs a new AdminSubscriptionProblemSolvingApi. 
    * @alias module:client/AdminSubscriptionProblemSolvingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Solve problems provided by FastReport.Cloud.Admin.Controllers.SubscriptionAnalyticsController
     * @param {Object} opts Optional parameters
     * @param {module:models/AnalysisResultsVM} opts.analysisResults 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    adminSubscriptionProblemSolvingSolveProblemsWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = opts['analysisResults'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKey', 'JWT'];
      let contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/admin/v1/Analytics/Solve', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Solve problems provided by FastReport.Cloud.Admin.Controllers.SubscriptionAnalyticsController
     * @param {Object} opts Optional parameters
     * @param {module:models/AnalysisResultsVM} opts.analysisResults 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    adminSubscriptionProblemSolvingSolveProblems(opts) {
      return this.adminSubscriptionProblemSolvingSolveProblemsWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
