/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FastreportCloudSdk);
  }
}(this, function(expect, FastreportCloudSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FastreportCloudSdk.GroupsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GroupsApi', function() {
    describe('groupsCreateGroup', function() {
      it('should call groupsCreateGroup successfully', function(done) {
        //uncomment below and update the code to test groupsCreateGroup
        //instance.groupsCreateGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsDeleteGroup', function() {
      it('should call groupsDeleteGroup successfully', function(done) {
        //uncomment below and update the code to test groupsDeleteGroup
        //instance.groupsDeleteGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsGetGroup', function() {
      it('should call groupsGetGroup successfully', function(done) {
        //uncomment below and update the code to test groupsGetGroup
        //instance.groupsGetGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsGetGroupList', function() {
      it('should call groupsGetGroupList successfully', function(done) {
        //uncomment below and update the code to test groupsGetGroupList
        //instance.groupsGetGroupList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsGetMyPermissions', function() {
      it('should call groupsGetMyPermissions successfully', function(done) {
        //uncomment below and update the code to test groupsGetMyPermissions
        //instance.groupsGetMyPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsGetPermissions', function() {
      it('should call groupsGetPermissions successfully', function(done) {
        //uncomment below and update the code to test groupsGetPermissions
        //instance.groupsGetPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsRenameGroup', function() {
      it('should call groupsRenameGroup successfully', function(done) {
        //uncomment below and update the code to test groupsRenameGroup
        //instance.groupsRenameGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('groupsUpdatePermissions', function() {
      it('should call groupsUpdatePermissions successfully', function(done) {
        //uncomment below and update the code to test groupsUpdatePermissions
        //instance.groupsUpdatePermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
